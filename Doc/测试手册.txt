1.GPIO测试
（1）使用led.h中led_dev_t实例化IO，例：
	led_dev_t led1 =
	{
		.io_t.io_obj = 
						{	
							.IO_PortSel = GPIO_PORT_C,
							.IO_PinSel = GPIO_PIN_09,
							.GpioElec = 
										{ 
											PIN_STAT_RST,							
											PIN_DIR_OUT,
										},
						},
	};
	（2）初始化IO和输出，例:	led_ioctl.ioInit(&led1);
	(3)调用led_ioctl.IoOutLoop(&led1)实现点亮led1

2.OTS（内部温度传感器）测试：先调用OtsInitConfig(void)初始化，再调用Get_Temprature(void)（此函数放任意位置）

3.RTC（内部温度传感器）测试：先调用BSP_RTC_Config(void)初始化，再调用BSP_RTC_Get_DateAndTime(UTC8_Time_Typedef * UTC8_Time)（此函数放任意位置）

4.看门狗测试：先调用WDT_Config(wdt_HandlerType * wdt_handler)初始化，再循环调用WDT_Feed(wdt_HandlerType * wdt_handler)

5.TIMER2测试：先初始化，再在bsp_timer2.c中断中打断点即可

6.DAC测试：简单功能，略

7.串口测试（以串口1为例）	
（1）调用void BSP_Usart_Init(Usartx_Typedef * Usartx)初始化串口1：
	方式1：BSP_Usart_Init(&uart1);方式2：g_usart.fp_setup(&uart1);
（2）发送测试：
	a.新建一个发送buffer：u8 TxBuf[1024]; memset(TxBuf,0x99,sizeof(TxBuf));
	b.调用uart1中的方法（阻塞发送）：uart1.Uart_Handler.fptr_com_send_pending(&uart1->Usart_cfgInfo_Typedef,TxBuf,sizeof(TxBuf),0);
									或者g_uart.fp_send(&usart1,(uint8_t *)uart_test_string,strlen(uart_test_string),pend);
	  调用uart1中的方法（DMA发送）：uart1.Uart_Handler.fptr_com_send_dma(&uart1->Usart_cfgInfo_Typedef,TxBuf,sizeof(TxBuf));
									或者g_uart.fp_send(&usart1,(uint8_t *)uart_test_string,strlen(uart_test_string),dma);
		（四种方法调用任意一个即可）
	c.打开串口调试助手观察数据
（3）接收测试：
	a.新建一个接收buffer：u8 RxBuf[1024]; memset(RxBuf,0,sizeof(RxBuf));
	b.启动debug，在bsp_uart.c中串口接收超时中断回调函数static void USART1_RxTimeOut_IrqCallback(void)中打断点
	c.打开串口调试助手发送任意长度的报文
	d.待程序运行到断点处，观察uart1.rxBuf中的数据

8.nor flash(w25q64)，eeprom(at24c02)读写测试:
 （1）初始化Spi_device_Init(&w25q64);
 （2）Spi_device_Write(stc_spi_device_t *spi_device,uint32_t WriteAddr,uint8_t* pBuffer,uint32_t NumByteToWrite);
 （3）Spi_device_Read(stc_spi_device_t *spi_device,uint32_t ReadAddr, uint8_t* pBuffer, uint32_t NumByteToRead);
 需要测试w25q128只需要修改w25q64中的参数即可

	eeprom测试同上

9.tf卡测试：略

10.文件系统测试（w25q64和tf卡）：
（1）初始化串口10：见上面的初始化方法

（2）在main.c中调用void FileSystem_Test()，打开串口助手观察串口输出结果

11.LWIP测试(只支持裸机模式)
裸机环境下测试LWIP注释掉FreeRTOSConfig.h中的#define xPortSysTickHandler SysTick_Handler
（1）在main函数中注释rtos相关的代码
（2）依次在main函数while（1）循环前调用void LwipTick_Config(void)和static void Netif_Config(void)，需要udp或tcp调用Udp_Init或者TCP_Init，在while（1）中调用ethernetif_input(&gnetif)和sys_check_timeouts()
（3）在main中修改ip，netmask，gateway等
（4）用网络调试助手测试